)attr default(!+_)
/* ************************************************************************** */
/* Conley fix for Dynamic ISPF and bug passing nested menu options
/* ************************************************************************** */
/*
/* PANEL NAME: ERB0PRM
/*
/* PROPRIETARY STATEMENT:
/*    LICENSED MATERIALS - PROPERTY OF IBM
/*    "RESTRICTED MATERIALS OF IBM"
/*    5694-A01
/*    COPYRIGHT IBM CORP. 1994, 2011
/*    STATUS: z/OS V1R13 RMF (HRM7780/JRM778J)
/*
/*     RMF Performance Measurement Primary Selection Menu
/*
/* $ZA=SPEV4,@WA05515,,HWG: Usability Enhancements                  @ZAA
/* $ZB=SPEV4,@WA05515,,HKH: Usability Enhancements - Version number @ZBA
/* $E1=OSREL2,HRM6602,,GBO: OS/390 1.2.0 RMF                        @E1A
/* $E2=OSREL3,HRM6603,,HOL: OS/390 1.3.0 RMF                        @E2A
/* $F1=OSREL4,HRM6604,,HOL: OS/390 2.4.0 RMF                        @F1A
/* $G1=OSREL6,HRM6606,,GBO: OS/390 2.6.0 RMF                        @G1A
/* $H1=OSREL7,HRM6607,,GBO: OS/390 2.7.0 RMF                        @H1A
/* $I1=OSREL10,HRM7703,,GUB: OS/390 2.10.0 RMF                      @I1A
/* $J1=OSREL12,HRM7705,,GUB: z/OS V1R2 RMF                          @J1A
/* FDL: Prevents endless loop when running under TSO batch      @WA53514
/* $K1=OSREL15,HRM7708,,GUB: z/OS V1R5 RMF                          @K1A
/* $L1=OSREL17,HRM7720,,GUB: z/OS V1R7 RMF                          @L1A
/* $01=OSREL18,HRM7730,,GUB: z/OS V1R8 RMF                          @01A
/* $11=OSREL19,HRM7740,,GUB: z/OS V1R9 RMF                          @11A
/* $21=OSREL110,HRM7750,,GUB: z/OS V1R10 RMF                        @21A
/* $31=R760,HRM7760,,GUB: z/OS V1R11 RMF                            @31A
/* $41=R770,HRM7770,,GUB: z/OS V1R12 RMF                            @41A
/* $51=R780,HRM7780,,JKU: z/OS V1R13 RMF                            @51A
/*
/* ************************************************************************** */
/*              MESSAGES:  ERBB117I                                           */
   _ type(input)  intens(low)  color(green) caps(on)
   ¬ type(input)  intens(low) color(green) pad('_')

   ! type(text)   intens(high) color(white)
   @ type(text)   intens(high) color(red)
   # type(text)   intens(high) color(yellow)
   + type(text)   intens(low)  color(blue) skip(on)
   < type(text)   intens(low)  color(turq)
)body expand("") cmd(zcmd)
+          !         RMF - Performance Management    " "     + z/OS V1R13 RMF
!Selection ===>_zcmd  " " +
+
<Enter selection number or command on selection line.
!
!
!  1<Postprocessor  +Postprocessor reports for Monitor I, II, and III      (PP)
!  2<Monitor II     +Snapshot reporting with Monitor II                    (M2)
!  3<Monitor III    +Interactive performance analysis with Monitor III     (M3)
!
!  U<USER           +User-written applications (add your own ...)          (US)
!
#  R<RMF SR         +Performance analysis with the Spreadsheet Reporter
#  P<RMF PM         +RMF PM Java Edition
#  N<News           +What's new in z/OS V1R13 RMF
!
!                             !T<TUTORIAL   !X<EXIT
!
#  RMF Home Page:   +http://www.ibm.com/systems/z/os/zos/features/rmf/
+
!         5694-A01 Copyright IBM Corp. 1994, 2011. All Rights Reserved
!                    Licensed Materials - Property of IBM +
!
)INIT
    &zprim = 'YES'
    &ZHTOP = ERBC               /* Top help panel
    &ZHINDEX = ERBC             /* Index help panel
 /* positions cursor to command-line ******************************* */
    .cursor = zcmd
 /* sets up corresponding help panel ******************************* */
    &erbhelp = 'ERB0PRM0'
    .HELP = &erbhelp            /* Inserts name of tutorial panel    */
    &ERBLVL  = &Z               /* Resets last visible line          */
 /* sets the reset indication for stacked messages ***************** */
 /* if this panel is not displayed, does not reset the stack         */
    &erbmsgre = 1
    if (.RESP = 'ENTER')
        &erbmsgre = 0
)reinit
 /* refeshes command *********************************************** */
    refresh zcmd
)proc
 /* prevents infinite loop in TSO batch ******************** @WA53514*/
    If (&zcmd = &Z)                                       /* @WA53514*/
      &tmpenvir = &zenvir                                 /* @WA53514*/
      &tmpenvir = trunc(&tmpenvir,16)                     /* @WA53514*/
      &tmpenvir = .trail                                  /* @WA53514*/
      &tmpenvir = trunc(&tmpenvir,8)                      /* @WA53514*/
      IF (&tmpenvir = 'BATCH')                            /* @WA53514*/
        &zcmd = 'X'                                       /* @WA53514*/
 /* resets stacked messages      *********************************** */
    if ( &erbmsgre = 1)
         &erbmsgre = 0
         &erbmsgsn = 0
         &erbmsgst = &z
 /* separates command and parms ************************************ */
    &point = '.'
    &erbzcmd = &zcmd
    &erbcmdc = trunc(&erbzcmd,' ')
    &trl0 = .trail
    &erbcmdc = trunc(&erbcmdc,&erbsepc)
    &zcmd = &erbcmdc
    &trl1 = .trail
    &erbparc = '&trl1. &trl0'
    &erbcmdc = trunc(&erbcmdc,&point)
    &trail2 = .trail
 /* translate abbreviated or numbered selections to standard string  */
                                                             /* 4@B1D*/
    &erbcmdc=trans(&erbcmdc
                    1,'PP'
                   PP,'PP'
                    2,'M2'
                   M2,'M2'
                    3,'M3'
                   M3,'M3'
                   US,'USR'
                    U,'USR'
                 USER,'USR'
             TUTORIAL,'TUTORIAL'
                  TUT,'TUTORIAL'
                    T,'TUTORIAL'
                    P,'PMOS'
                    R,'RMFPP'
                    N,'NEWS'
                    X,'EXIT'
                    Z,'EXIT'
                 EXIT,'EXIT'
                    *,*)
 /* Checks if command input is a valid on this screen.               */
    ver(&erbcmdc,LIST,PP,
                      M2,
                      M3,
                      USR,
                      TUTORIAL,
                      PMOS,
                      RMFPP,
                      NEWS,
                      EXIT,
                      MSG=ERBB117I)
    &ERBZCMDT = '&ERBCMDC &ERBPARC' /* Saves translated command input*/
 /* selects action according to input ****************************** */
 /********************************************************************/
 /* The following code should be modified when a private report      */
 /* has been defined thru use of the utility ERB3RDUT. The parameter */
 /* passed to program ERB3RDPC must be the report name as it has     */
 /* been defined to the utility.                                     */
 /********************************************************************/
    if (&trail2 ¬= &z)
       ver(&ERBCMDC, LIST, PP,
                           M2,
                           M3,
                           USR,
                           MSG=ERBB117I)
       &zcmd = '&erbcmdc..&trail2'
       if (&erbparc ¬= &z)
         &zcmd = '&zcmd&erbsepc&erbparc'
    if (&trail2 = &z)
       &zcmd = &erbcmdc

 /* handles invocation parmeter (&PARM) passed to RMF CLIST ******** */
    vget erbparm ASIS
    &parm = &erbparm
    IF (&parm = '')
      &parm = 'NONE'

 /********************************************************************/
 /* Conley changes to set &PARM to &ZTRAIL2 for nested menu opts     */
 /********************************************************************/
    IF (&trail2 ¬= &Z)  /* conley */
      &parm = &trail2   /* conley */
 /********************************************************************/
 /* Conley changes to zsel add PARM(&PARM) to pass nested menu opts  */
 /********************************************************************/
    &zsel = trans(trunc(&zcmd,'.')
             PP,'CMD(ERBRMFP)'
             M2,'CMD(ERBRMFX MON(MON2) RECURSION(YES))'
             M3,'CMD(ERBRMFX MON(MON3) PARM(&PARM) RECURSION(YES))'
             M2,'CMD(ERBRMFX MON(MON2) PARM(&PARM) RECURSION(YES))',
                'NOCHECK'
             M3,'CMD(ERBRMFX MON(MON3) PARM(&PARM) RECURSION(YES))',
                'NOCHECK'
            USR,'PANEL(ERB0USR)'
           EXIT,'EXIT'
       TUTORIAL,'PGM(ISPTUTOR) PARM(ERBC)'
           PMOS,'PGM(ISPTUTOR) PARM(ERBCPMO0)'
          RMFPP,'PGM(ISPTUTOR) PARM(ERBCRPP0)'
           NEWS,'PGM(ISPTUTOR) PARM(ERBCZ113)'
            ' ',' ')
)end

 PROC 0 MON(NONE) FUNCTION(REPORTER) PARM(NONE) RECURSION(NONE)
 /********************************************************************/
 /* Conley changes to add STACK to LIBDEF's for Dynamic ISPF         */
 /********************************************************************/
 /*                                                                  */
 /*01* MODULE-NAME: ERBRMFX                                          */
 /*                                                                  */
 /*01* DESCRIPTIVE-NAME: RMF Invocation CLIST for:                   */
 /*                      - RMF Performance Measurement Selection Menu*/
 /*                      - Monitor II Reporter                       */
 /*                      - Monitor III Reporter and Utility          */
 /*                      - Postprocessor ISPF Interface              */
 /*                                                                  */
 /*01* PROPRIETARY-STATEMENT:                                        */
 /*       Licensed Materials - Property of IBM                       */
 /*       "Restricted Materials of IBM"                              */
 /*       5694-A01                                               @L1C*/
 /*       Copyright IBM Corp. 1994, 2011                         @51C*/
 /*       Status=HRM7780                                         @51C*/
 /*                                                                  */
 /*01* FUNCTION:                                                     */
 /*       The ERBRMFX CLIST invokes Clist ERBRMF3X to specify        */
 /*       DDnames for all necessary libraries.                       */
 /*       Depending on passed monitor-code one of the following      */
 /*       is invoked:                                                */
 /*       - RMF Performance Measurement Selection Menu (PrimMenu)    */
 /*       - RMF Postprocessor Interface Menu via PrimMenu            */
 /*       - Monitor II Reporter via PrimMenu                         */
 /*       - Monitor III Reporter via PrimMenu                        */
 /*       - Monitor III Utility via PrimMenu                         */
 /*       IF ERBRMFX CLIST is invoked from PrimMenu (RECURSION=YES)  */
 /*       then the selected Monitor is directly invoked.             */
 /*                                                                  */
 /*01* NOTES:                                                        */
 /*       - none -                                                   */
 /*                                                                  */
 /*01* OPERATION:                                                    */
 /*       1. Invokes Clist ERBRMF3X to define search sequence of     */
 /*          the ISPF libraries according to ZLANG.                  */
 /*       2. Increases counter of parallel RMF sessions and          */
 /*          counter of started RMF monitors in profile pool.        */
 /*       3. Gets DDnames from shared pool.                          */
 /*       4. Allocate the ISPF panel and message libraries           */
 /*          and (for keylist support) table libraries.              */
 /*       5. Prepares invocation 'command string' depending on       */
 /*          passed parameter MON.                                   */
 /*       6. Checks, if allocations have failed.                     */
 /*       7. Invokes RMF Monitor II, Monitor III Reporter / Utility, */
 /*          Postprocessor Interface or Performance Measurement      */
 /*          Selection Menu according to the previously set up       */
 /*          invocation 'command string'.                            */
 /*       8. Checks number of parallel RMF sessions and number of    */
 /*          started RMF monitors.                                   */
 /*          Resets the application level search sequence and frees  */
 /*          allocated libraries.                                    */
 /*       9. Returns to the caller                                   */
 /*                                                                  */
 /*01* RECOVERY-OPERATION: None                                      */
 /*                                                                  */
 /*01* DEPENDENCIES: None                                            */
 /*                                                                  */
 /*01* CALLERS:                                                      */
 /*       ERBRMF    CLIST                                            */
 /*       ERBRMFU   CLIST                                            */
 /*       ERB0PRM   PANEL                                            */
 /*                                                                  */
 /*01* CHANGE-ACTIVITY:                                              */
 /*    $ZA=SPEV4,@WA05515,,HWG: Usability Enhancements           @ZAA*/
 /*    $ZB=SPEV4,@WA05515,,HKH: Usability Enhancements - RollIn  @ZBA*/
 /*    $D1=R520,HRM5520,,GBO: Reestablish RMF command (ERB3RTSO) @D1A*/
 /*    HOL: Free resources when run in split-screen mode     @WA12805*/
 /*    AJU: English RMF under Kanji ISPF causes message      @WA16884*/
 /*    $E1=OSREL2,HRM6602,,GBO: OS/390 1.2.0 RMF                 @E1A*/
 /*    $E2=OSREL3,HRM6603,,HOL: OS/390 1.3.0 RMF                 @E2A*/
 /*    $F1=OSREL4,HRM6604,,GBO: OS/390 2.4.0 RMF                 @F1A*/
 /*    $G1=OSREL6,HRM6606,,GBO: OS/390 2.6.0 RMF                 @G1A*/
 /*    $H1=OSREL7,HRM6607,,GBO: OS/390 2.7.0 RMF                 @H1A*/
 /*    $I1=OSREL10,HRM7703,,GUB: OS/390 2.10.0 RMF               @I1A*/
 /*    $J1=OSREL12,HRM7705,,GUB: z/OS V1R2 RMF                   @J1A*/
 /*    $K1=OSREL15,HRM7708,,GUB: z/OS V1R5 RMF                   @K1A*/
 /*    $L1=OSREL17,HRM7720,,GUB: z/OS V1R7 RMF                   @L1A*/
 /*    $L2=OA06974,HRM7720,,FDL: Considers &SYSPREF for building @L2A*/
 /*                              dsname qualifier           /fin @L2A*/
 /*    $01=OSREL18,HRM7730,,GUB: z/OS V1R8 RMF                   @01A*/
 /*    $11=OSREL19,HRM7740,,GUB: z/OS V1R9 RMF                   @11A*/
 /*    $21=R750,HRM7750,,GUB: z/OS V1R10 RMF                     @21A*/
 /*    $31=R760,HRM7760,,GUB: z/OS V1R11 RMF                     @31A*/
 /*    $41=R770,HRM7770,,GUB: z/OS V1R12 RMF                     @41A*/
 /*    $51=R780,HRM7780,,JKU: z/OS V1R13 RMF                     @51A*/
 /*                                                                  */
 /********************************************************************/
 CONTROL NOMSG NOSYMLIST NOCONLIST ASIS NOLIST NOFLUSH NOPROMPT
 ISPEXEC CONTROL ERRORS CANCEL              /* Cancel on retcode > 12*/

 SET &RC = 0                                /* Inits return code     */
 SET &CONTINUE = &STR(YES)
 SET &LIBDEFTLIB = &STR(NO)
 SET &LIBDEF0TLIB = &STR(NO)
 SET &LIBDEF2TLIB = &STR(NO)
 SET &ERBPARM = &PARM
 ISPEXEC VPUT ERBPARM PROFILE

 /*------------------------------------------------------------------*/
 /* 1. invokes Clist ERBRMF3X to define search sequence of           */
 /*    the ISPF libraries according to ZLANG.                        */
 /*------------------------------------------------------------------*/
 ISPEXEC SELECT CMD(%ERBRMF3X  )
 IF &LASTCC NE 0 THEN EXIT CODE(&LASTCC)    /*               @WA16884*/
 /*------------------------------------------------------------------*/
 /* 2. Increases counter of parallel RMF sessions and                */
 /*    counter of started RMF monitors in profile pool.              */
 /*------------------------------------------------------------------*/
 SET CNTLLST = &STR(ERBSESN  ERBMONS)
 ISPEXEC VGET ZSPLIT
 ISPEXEC VGET (&CNTLLST) PROFILE
 IF &ERBSESN < 0 THEN SET &ERBSESN = 0
 IF &ERBSESN > 4 THEN SET &ERBSESN = 0
 IF &ZSPLIT = NO THEN SET &ERBSESN = 0
 SET &ERBSESN = &ERBSESN + 1
 IF &ERBMONS < 0 THEN SET &ERBMONS = 0
 SET &ERBMONS = &ERBMONS + 1
 ISPEXEC VPUT (&CNTLLST) PROFILE

 /*------------------------------------------------------------------*/
 /* 3. Gets DDnames from shared pool.                                */
 /*------------------------------------------------------------------*/

 SET DDNAMLST = &STR(SRMFT    SRMFPENU SRMFTENU SRMFMENU +
                     SRMFPJPN SRMFTJPN SRMFMJPN          +
                     ERBTAB0  ERBTAB2  ERBTAB3           +
                     ERBADM   TABLSUF                    +
                     TABOS2   TABOS3   TABOS4   TABOS6   +
                     TABOS7   TABOS10  TABOS12  TABOS15  +
                     TABOS17  TABOS18  TABOS19  TABZR10  +
                     TABZR11  TABZR12                    +
                     TABOS2A  TABOS3A  TABOS4A  TABOS6A  +
                     TABOS7A  TABOS10A TABOS12A TABOS15A +
                     TABOS17A TABOS18A TABOS19A TABZR10A +
                     TABZR11A TABZR12A                   +
                     LIBSALOC CONVOPTS RMFLANG  CONTACT  +
                    )                                          /*@51C*/
 ISPEXEC VGET (&DDNAMLST) SHARED                               /*@ZBC*/

 /*------------------------------------------------------------------*/
 /* 4. Allocate the ISPF panel and message libraries.                */
 /*------------------------------------------------------------------*/
 IF &RECURSION = &STR(NONE) THEN DO    /* NOT invoked from ERB0PRM   */
    /*---------------------------------------------------------------*/
    /* Allocates the user ISPF output table                          */
    /*---------------------------------------------------------------*/
    IF &SYSDSN(&ERBTAB0) Â¬= &STR(OK) THEN DO
       ALLOCATE DATASET(&ERBTAB0) SPACE(40 10) TRACKS DIR(100) +
          DSORG(PO) LRECL(80) BLKSIZE(3120) RECFM (F B)
       IF &LASTCC = 0 THEN +
          WRITE ERB0TABL dataset &ERBTAB0 has been created.
       ELSE DO
          WRITE Unable to allocate file ERB0TABL. &CONTACT
          EXIT CODE(12)
       END
       FREE DATASET(&ERBTAB0)
    END
    /*---------------------------------------------------------------*/
    /* Allocates the ISPF panel and message libraries                */
    /*---------------------------------------------------------------*/
    SET FAILDD = &STR()

    IF &RMFLANG Â¬= &STR(KANJDBCS) THEN DO
       SET SRMFPJPN=&STR()
       SET SRMFTJPN=&STR()
       SET SRMFMJPN=&STR()
    END

    IF &LIBSALOC = &STR(NO) THEN DO
       IF &SYSDSN(&SRMFPENU) Â¬= &STR(OK) THEN DO
          SET FAILDD=&STR(&FAILDD ERBPLIB)
       END
       IF &SYSDSN(&SRMFMENU) Â¬= &STR(OK) THEN DO
          SET FAILDD=&STR(&FAILDD ERBMLIB)
       END
       ALLOCATE FILE(ERBPLIB) DA(&SRMFPJPN &SRMFPENU) SHR REUSE
       ALLOCATE FILE(ERBMLIB) DA(&SRMFMJPN &SRMFMENU) SHR REUSE
       /*------------------------------------------------------------*/
       /* Allocate the ISPF table library (for keylist)              */
       /*------------------------------------------------------------*/
       SET FAILDD = &STR()
       ALLOCATE FILE(ERB0TABL) DA(&ERBTAB0) SHR REUSE
       IF &LASTCC Â¬= 0 THEN SET FAILDD=&STR(&FAILDD ERB0TABL)

       IF &LIBSALOC = &STR(NO) THEN DO
          IF &SYSDSN(&SRMFTENU) Â¬= &STR(OK) THEN DO
             SET FAILDD=&STR(&FAILDD ERB0TLIB)
          END
          ELSE DO
             IF &SYSDSN(&SRMFT) Â¬= &STR(OK) THEN DO
                SET FAILDD=&STR(&FAILDD ERB0TLIB)
             END
          END
          ALLOCATE FILE(ERB0TLIB) DA(&ERBTAB0 +
             &SRMFTJPN &SRMFTENU &SRMFT) SHR REUSE
       END
       ELSE DO
          ALLOCATE FILE(ERB0TLIB) DA(&ERBTAB0) SHR REUSE
       END
       SET &LIBDEF0TLIB = &STR(YES)
    END
 END

 /*------------------------------------------------------------------*/
 /* 5. Prepares invocation 'command string' depending on passed      */
 /*    parameter MON.                                                */
 /*------------------------------------------------------------------*/
 SELECT
  WHEN (&MON = &STR(0)) DO
   /*----------------------------------------------------------------*/
   /* Prepares 'command string' to invoke                            */
   /* RMF Performance Measurement Selection Menu.                    */
   /*----------------------------------------------------------------*/
   SET ERBPARM = &STR(NONE)
   ISPEXEC VPUT ERBPARM PROFILE
   IF &STR(&PARM) = &STR(NONE) THEN SET &OPTSTR=&STR(PASSLIB)
   ELSE SET &OPTSTR = &STR(PASSLIB OPT(&PARM))
   SET CMDSTRING = &STR( SELECT PANEL(ERB0PRM) NEWAPPL(ERBS) &OPTSTR)
   END
  WHEN (&MON = &STR(MONPP)) DO
   /*----------------------------------------------------------------*/
   /* Prepares 'command string' to invoke RMF Postprocessor          */
   /* Interface Menu.                                                */
   /*----------------------------------------------------------------*/
   SET CMDSTRING = &STR( SELECT PANEL(ERB0PRM) OPT(1) +
                         NEWAPPL(ERBS) PASSLIB )
   END                           /* end of WHEN (&MON = &STR(MONPP)) */
  WHEN (&MON = &STR(MON2)) DO
   /*----------------------------------------------------------------*/
   /* 'Invokes' RMF Monitor II Reporter.                             */
   /*----------------------------------------------------------------*/

   /*----------------------------------------------------------------*/
   /* Allocates the user ISPF output table                           */
   /*----------------------------------------------------------------*/
   IF &SYSDSN(&ERBTAB2) Â¬= &STR(OK) THEN DO
      ALLOCATE DATASET(&ERBTAB2) SPACE(40 10) TRACKS DIR(100) +
         DSORG(PO) LRECL(80) BLKSIZE(3120) RECFM (F B)
      IF &LASTCC = 0 THEN +
         WRITE ERB2TABL dataset &ERBTAB2 has been created.
      ELSE DO
         WRITE Unable to allocate file ERB2TABL. &CONTACT
         EXIT CODE(12)
      END
      FREE DATASET(&ERBTAB2)
   END

   /*----------------------------------------------------------------*/
   /* Allocate the ISPF libraries                                    */
   /*----------------------------------------------------------------*/
   SET FAILDD = &STR()
   ALLOCATE FILE(ERB2TABL) DA(&ERBTAB2) SHR REUSE
   IF &LASTCC Â¬= 0 THEN SET FAILDD=&STR(&FAILDD ERB2TABL)

   IF &LIBSALOC = &STR(NO) THEN DO
      IF &SYSDSN(&SRMFTENU) Â¬= &STR(OK) THEN DO
         SET FAILDD=&STR(&FAILDD ERB2TLIB)
      END
      ELSE DO
         IF &SYSDSN(&SRMFT) Â¬= &STR(OK) THEN DO
            SET FAILDD=&STR(&FAILDD ERB2TLIB)
         END
      END
      ALLOCATE FILE(ERB2TLIB) DA(&ERBTAB2 +
         &SRMFTJPN &SRMFTENU &SRMFT) SHR REUSE
   END
   ELSE DO
      ALLOCATE FILE(ERB2TLIB) DA(&ERBTAB2) SHR REUSE
   END
   SET &LIBDEF2TLIB = &STR(YES)

   /*----------------------------------------------------------------*/
   /* Prepares 'command string' to invoke RMF Monitor II Reporter.   */
   /*----------------------------------------------------------------*/

   IF &RECURSION = &STR(YES) THEN DO   /* invoked from ERB0PRM       */
      SET CMDSTRING = &STR( SELECT PGM(ERB2RCTL) PARM(&PARM) +
                            NEWAPPL(ERB2) PASSLIB )
   END
   ELSE DO                             /* no recursion               */
      SET CMDSTRING = &STR( SELECT PANEL(ERB0PRM) OPT(2) +
                            NEWAPPL(ERBS) PASSLIB )
   END

   END                           /* end of WHEN (&MON = &STR(MON2))  */
  WHEN (&MON = &STR(UTIL) | &MON = &STR(MON3)) DO
   /*----------------------------------------------------------------*/
   /* 'Invokes' RMF Monitor III Reporter / Utility.                  */
   /*----------------------------------------------------------------*/

   IF &MON = &STR(UTIL) THEN SET &FUNCTION = &STR(UTILITY)

   /*----------------------------------------------------------------*/
   /* Checks, if previous releases of RMF were installed.            */
   /* - First check under hlq syspref.sysuid, then under sysuid. @L2A*/
   /*----------------------------------------------------------------*/

   SELECT
      WHEN (&FUNCTION = &STR(UTILITY))   SET PRE_REL_TABLES=&STR()
      WHEN (&CONVOPTSÂ¬=&STR(YES)) SET PRE_REL_TABLES=&STR()
      WHEN (&SYSDSN(&TABZR12) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABZR12)  /* z/OS V1R12        @51A*/
      WHEN (&SYSDSN(&TABZR12A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABZR12A) /* z/OS V1R12        @51A*/
      WHEN (&SYSDSN(&TABZR11) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABZR11)  /* z/OS V1R11        @41A*/
      WHEN (&SYSDSN(&TABZR11A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABZR11A) /* z/OS V1R11        @41A*/
      WHEN (&SYSDSN(&TABZR10) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABZR10)  /* z/OS V1R10        @31A*/
      WHEN (&SYSDSN(&TABZR10A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABZR10A) /* z/OS V1R10        @31A*/
      WHEN (&SYSDSN(&TABOS19) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS19)  /* z/OS V1R9         @21A*/
      WHEN (&SYSDSN(&TABOS19A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS19A) /* z/OS V1R9         @21A*/
      WHEN (&SYSDSN(&TABOS18) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS18)  /* z/OS V1R8         @11A*/
      WHEN (&SYSDSN(&TABOS18A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS18A) /* z/OS V1R8         @11A*/
      WHEN (&SYSDSN(&TABOS17) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS17)  /* z/OS V1R7         @01A*/
      WHEN (&SYSDSN(&TABOS17A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS17A) /* z/OS V1R7         @01A*/
      WHEN (&SYSDSN(&TABOS15) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS15)  /* z/OS V1R5         @L1A*/
      WHEN (&SYSDSN(&TABOS15A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS15A) /* z/OS V1R5         @L2A*/
      WHEN (&SYSDSN(&TABOS12) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS12)  /* z/OS V1R2         @K1A*/
      WHEN (&SYSDSN(&TABOS12A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS12A) /* z/OS V1R2         @L2A*/
      WHEN (&SYSDSN(&TABOS10) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS10)  /* OS/390 Rel. 2.10  @J1A*/
      WHEN (&SYSDSN(&TABOS10A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS10A) /* OS/390 Rel. 2.10  @L2A*/
      WHEN (&SYSDSN(&TABOS7) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS7)   /* OS/390 Rel. 2.7.0 @I1A*/
      WHEN (&SYSDSN(&TABOS7A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS7A)  /* OS/390 Rel. 2.7.0 @L2A*/
      WHEN (&SYSDSN(&TABOS6) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS6)   /* OS/390 Rel. 2.6.0 @H1A*/
      WHEN (&SYSDSN(&TABOS6A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS6A)  /* OS/390 Rel. 2.6.0 @L2A*/
      WHEN (&SYSDSN(&TABOS4) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS4)   /* OS/390 Rel. 2.4.0 @G1A*/
      WHEN (&SYSDSN(&TABOS4A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS4A)  /* OS/390 Rel. 2.4.0 @L2A*/
      WHEN (&SYSDSN(&TABOS3) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS3)   /* OS/390 Rel. 1.3.0 @F1A*/
      WHEN (&SYSDSN(&TABOS3A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS3A)  /* OS/390 Rel. 1.3.0 @L2A*/
      WHEN (&SYSDSN(&TABOS2) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS2)   /* OS/390 Rel. 1.2.0 @E2A*/
      WHEN (&SYSDSN(&TABOS2A) = &STR(OK)) +
         SET PRE_REL_TABLES=&STR(&TABOS2A)  /* OS/390 Rel. 1.2.0 @L2A*/
                                            /* Tables prior to OS390 */
                                            /* deleted           @L2D*/
      OTHERWISE                        SET PRE_REL_TABLES=&STR()
   END

   /*----------------------------------------------------------------*/
   /* Allocates the user ISPF output table.                          */
   /*----------------------------------------------------------------*/
   IF &SYSDSN(&ERBTAB3) Â¬= &STR(OK) THEN DO
      ALLOCATE DATASET(&ERBTAB3) SPACE(40 10) TRACKS DIR(100) +
         DSORG(PO) LRECL(80) BLKSIZE(3120) RECFM (F B)
      IF &LASTCC = 0 THEN +
         WRITE ERBTABL dataset &ERBTAB3 has been created.
      ELSE DO
         WRITE Unable to allocate file ERBTABL. &CONTACT
         EXIT CODE(12)
      END
      FREE DATASET(&ERBTAB3)
   END

   /*----------------------------------------------------------------*/
   /* Allocates the user ADMGDF output file (for GDF file creation). */
   /*----------------------------------------------------------------*/
   IF &SYSDSN(&ERBADM) Â¬= &STR(OK) THEN DO
      ALLOCATE DATASET(&ERBADM) SPACE(5 5) TRACKS DIR(10) +
         DSORG(PO) LRECL(400) BLKSIZE(4000) RECFM (F B)
      IF &LASTCC = 0 THEN +
         WRITE ADMGDF dataset &ERBADM has been created.
      ELSE DO
         WRITE Unable to allocate file ADMGDF. &CONTACT
         EXIT CODE(12)
      END
      FREE DATASET(&ERBADM)
   END

   /*----------------------------------------------------------------*/
   /* Allocate the ISPF libraries.                                   */
   /*----------------------------------------------------------------*/
   SET FAILDD = &STR()
   ALLOCATE FILE(ADMGDF)  DA(&ERBADM)  SHR REUSE
   IF &LASTCC Â¬= 0 THEN SET FAILDD=&STR(&FAILDD ADMGDF)
   ALLOCATE FILE(ERBTABL) DA(&ERBTAB3) SHR REUSE
   IF &LASTCC Â¬= 0 THEN SET FAILDD=&STR(&FAILDD ERBTABL)

   IF &LIBSALOC = &STR(NO) THEN DO
      IF &SYSDSN(&SRMFTENU) Â¬= &STR(OK) THEN DO
         SET FAILDD=&STR(&FAILDD ERBTLIB)
      END
      ELSE DO
         IF &SYSDSN(&SRMFT) Â¬= &STR(OK) THEN DO
            SET FAILDD=&STR(&FAILDD ERBTLIB)
         END
      END
      ALLOCATE FILE(ERBTLIB) DA(&ERBTAB3 +
         &SRMFTJPN &SRMFTENU &SRMFT &PRE_REL_TABLES) SHR REUSE
   END
   ELSE DO
      ALLOCATE FILE(ERBTLIB) DA(&ERBTAB3 &PRE_REL_TABLES) SHR REUSE
   END
   SET &LIBDEFTLIB = &STR(YES)

   /*----------------------------------------------------------------*/
   /* Prepares 'command string' to invoke RMF Monitor III Reporter   */
   /* or RMF Monitor III Utility.                                    */
   /*----------------------------------------------------------------*/
   IF &RECURSION = &STR(YES) THEN DO   /* invoked from ERB0PRM       */
      IF &FUNCTION=&STR(UTILITY) THEN +
         SET CMDSTRING = &STR( SELECT CMD(%ERB3RDUT) +
                                 NEWAPPL(ERBU) PASSLIB )
      ELSE SET CMDSTRING = &STR( SELECT PGM(ERB3RCTL) PARM(&PARM) +
                                 NEWAPPL(ERB) PASSLIB )
   END
   ELSE DO                             /* no recursion               */
      IF &FUNCTION=&STR(UTILITY) THEN DO
         /* The logic below has been modified due to the fact that   */
         /* the Utility should not be presented on the Primary Menu. */
         /* Whenever it is decided to incorporate the Utility into   */
         /* the Primary Menu the following two lines need to be      */
         /* activated and ...                                        */
         /*SET CMDSTRING = &STR( SELECT PANEL(ERB0PRM) OPT(U) +      */
         /*                      NEWAPPL(ERBS) PASSLIB )             */
         /* ... the follwoing two lines deleted.                     */
         SET CMDSTRING = &STR( SELECT CMD(%ERB3RDUT) +
                                 NEWAPPL(ERBU) PASSLIB )
      END
      ELSE SET CMDSTRING = &STR( SELECT PANEL(ERB0PRM) OPT(3) +
                                             NEWAPPL(ERBS) PASSLIB )
   END

   END                           /* end of WHEN (&MON = &STR(UTIL) | */
  OTHERWISE DO
   /*----------------------------------------------------------------*/
   /* Otherwise issues message.                                      */
   /*----------------------------------------------------------------*/
    WRITE  Invalid parameter passed: MON(&MON)
    SET &CONTINUE = &STR(NO)
   END                           /* end of OTHERWISE                 */
 END                             /* end of SELECT                    */

 /*------------------------------------------------------------------*/
 /* 6. Checks, if allocations have failed.                           */
 /*------------------------------------------------------------------*/
 IF &STR(&FAILDD) Â¬= &STR() THEN DO
    WRITE Error allocating the following DDNAMES: &FAILDD
    WRITE Probable cause: Clist ERBRMF3X is incorrectly customized.
    WRITE &CONTACT
    SET &RC = 0
 END
 ELSE DO
    /*---------------------------------------------------------------*/
    /* Defines the application level search sequence of ISPF         */
    /* libraries.                                                    */
    /*---------------------------------------------------------------*/
    IF &LIBSALOC = &STR(NO) THEN DO
       ISPEXEC LIBDEF ISPPLIB LIBRARY ID(ERBPLIB) STACK
       ISPEXEC LIBDEF ISPMLIB LIBRARY ID(ERBMLIB) STACK
    END
    IF &LIBDEFTLIB = &STR(YES) THEN DO
       ISPEXEC LIBDEF ISPTLIB LIBRARY ID(ERBTLIB) STACK
       ISPEXEC LIBDEF ISPTABL LIBRARY ID(ERBTABL) STACK
    END
    IF &LIBDEF2TLIB = &STR(YES) THEN DO
       ISPEXEC LIBDEF ISPTLIB LIBRARY ID(ERB2TLIB) STACK
       ISPEXEC LIBDEF ISPTABL LIBRARY ID(ERB2TABL) STACK
    END
    IF &LIBDEF0TLIB = &STR(YES) THEN DO
       ISPEXEC LIBDEF ISPTLIB LIBRARY ID(ERB0TLIB) STACK
       ISPEXEC LIBDEF ISPTABL LIBRARY ID(ERB0TABL) STACK
    END

    /*---------------------------------------------------------------*/
    /* 7. Invokes RMF Monitor II, Monitor III Reporter / Utility,    */
    /*    Postprocessor Interface or Performance Measurement         */
    /*    Selection Menu according to the previously set up          */
    /*    invocation 'command string'.                               */
    /*---------------------------------------------------------------*/
    IF &CONTINUE = &STR(YES) THEN DO
      ISPEXEC &CMDSTRING
      SET &RC = &LASTCC
    END

 END

 /*------------------------------------------------------------------*/
 /* 8. Checks number of parallel RMF sessions and number of started  */
 /*    RMF monitors.                                                 */
 /*    Resets the application level search sequence and frees        */
 /*    allocated libraries.                                          */
 /*                                                                  */
 /* Note:                                                            */
 /*    A monitor always requires a session. Thus if ERBSESN          */
 /*    is 0 but ERBMONS is > 0, ERBSESN is forced to 1.      @WA12805*/
 /*                                                                  */
 /*------------------------------------------------------------------*/
 SET CNTLLST = &STR(ERBSESN  ERBMONS)
 ISPEXEC VGET ZSPLIT
 ISPEXEC VGET (&CNTLLST) PROFILE
 IF &LASTCC Â¬= 0 THEN DO
   SET &ERBSESN = 1
   SET &ERBMONS = 1
 END
 IF &ZSPLIT = NO THEN SET &ERBSESN = 1
 IF &ERBSESN < 0 THEN SET &ERBSESN = 1
 IF &ERBMONS < 0 THEN SET &ERBMONS = 1
 SET &ERBSESN = &ERBSESN - 1
 SET &ERBMONS = &ERBMONS - 1
 IF &ERBSESN = 0 THEN DO
   IF &ERBMONS = 0 THEN DO
      /*-------------------------------------------------------------*/
      /* Reset the application level search sequence                 */
      /*-------------------------------------------------------------*/
      IF &LIBSALOC = &STR(NO) THEN DO
         ISPEXEC LIBDEF ISPPLIB
         ISPEXEC LIBDEF ISPMLIB
      END
      ISPEXEC LIBDEF ISPTLIB
      ISPEXEC LIBDEF ISPTABL
      /*-------------------------------------------------------------*/
      /* Frees libraries.                                            */
      /*-------------------------------------------------------------*/
      FREE FILE(ERBPLIB,  ERBMLIB,   +
                ERB0TLIB, ERB0TABL,  +
                ERB2TLIB, ERB2TABL,  +
                ERBTLIB,  ERBTABL,   ADMGDF)
   END
   ELSE SET &ERBSESN = 1                               /*    @WA12805*/
 END
 ISPEXEC VPUT (&CNTLLST) PROFILE


 /*------------------------------------------------------------------*/
 /* 9.Return to caller                                               */
 /*------------------------------------------------------------------*/
 EXIT CODE(&RC)
